{
  "swagger": "2.0",
  "info": {
    "description": "Swagger API Docs",
    "version": "1.0.0",
    "title": "Relational DB Designer",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "definitions": {
    "Attribute": {
      "type": "object",
      "required": [
        "id",
        "pos",
        "text",
        "isMultiValued",
        "isPrimaryKey",
        "isOptional"
      ],
      "properties": {
        "id": {
          "type": "number"
        },
        "pos": {
          "type": "object",
          "properties": {
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          }
        },
        "text": {
          "type": "string"
        },
        "isMultiValued": {
          "type": "boolean"
        },
        "isPrimaryKey": {
          "type": "boolean"
        },
        "isOptional": {
          "type": "boolean"
        }
      }
    },
    "Entity": {
      "type": "object",
      "required": [
        "id",
        "pos",
        "text"
      ],
      "properties": {
        "id": {
          "type": "number"
        },
        "pos": {
          "type": "object",
          "properties": {
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          }
        },
        "text": {
          "type": "string"
        },
        "isWeak": {
          "type": "boolean"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "relativePos": {
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number"
                  },
                  "y": {
                    "type": "number"
                  }
                }
              },
              "text": {
                "type": "string"
              },
              "isPrimaryKey": {
                "type": "boolean"
              },
              "isOptional": {
                "type": "boolean"
              },
              "isMultiValued": {
                "type": "boolean"
              }
            }
          }
        },
        "subsets": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "Relationship": {
      "type": "object",
      "required": [
        "id",
        "pos",
        "text"
      ],
      "properties": {
        "id": {
          "type": "number"
        },
        "pos": {
          "type": "object",
          "properties": {
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          }
        },
        "text": {
          "type": "string",
          "example": "Mock Relationship"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "relativePos": {
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number"
                  },
                  "y": {
                    "type": "number"
                  }
                }
              },
              "text": {
                "type": "string",
                "example": "Mock Attribute Relationship"
              },
              "isPrimaryKey": {
                "type": "boolean"
              },
              "isOptional": {
                "type": "boolean"
              },
              "isMultiValued": {
                "type": "boolean"
              }
            }
          }
        },
        "lHConstraints": {
          "type": "object",
          "example": {
            "1": "ONE_TO_ONE",
            "2": "ONE_TO_MANY"
          }
        }
      }
    },
    "Generalisation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "pos": {
          "type": "object",
          "properties": {
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          }
        },
        "parent": {
          "type": "string"
        },
        "entities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InvalidResponse": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "TranslatedTable": {
      "type": "object",
      "properties": {
        "tables": {
          "type": "object",
          "properties": {
              "table name": {
                "type": "string"
              },
              "table": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "source": {
                      "type": "number"
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "columnName": {
                            "type": "string"
                          },
                          "isPrimaryKey": {
                            "type": "boolean"
                          },
                          "isOptional": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "foreignKeys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "keyName": {
                            "type": "string"
                          },
                          "foreignTable": {
                            "type": "string"
                          },
                          "columns": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                } 
              }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Entities",
      "description": "ER Schema Entity"
    },
    {
      "name": "Relationships",
      "description": "ER Schema Relationships"
    },
    {
      "name": "Generalisations",
      "description": "ER Schema Generalisations"
    },
    {
      "name": "General",
      "description": "ER Schema General Functions"
    },
    {
      "name": "Translation",
      "description": "Translating from diagram to relational model"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/schema/all": {
      "post": {
        "tags": [
          "General"
        ],
        "description": "Stores **FULL** schema into database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "graphID": {
                  "type": "integer",
                  "description": "Graph ID of the given ER Diagram",
                  "example": 1
                },
                "entities": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Entity"
                  },
                  "example": [
                    {
                      "id": "1",
                      "pos": {
                        "x": 1,
                        "y": 2
                      },
                      "text": "Mock Entity 1",
                      "isWeak": true,
                      "attributes": [
                        {
                          "id": "1",
                          "relativePos": {
                            "x": 1,
                            "y": 2
                          },
                          "text": "Mock Attribute 1",
                          "isPrimaryKey": false,
                          "isOptional": false,
                          "isMultiValued": false
                        }
                      ],
                      "subsets": [
                        {
                          "id": "3",
                          "pos": {
                            "x": 1,
                            "y": 2
                          },
                          "text": "Subset Entity 1"
                        }
                      ]
                    },
                    {
                      "id": "2",
                      "pos": {
                        "x": 1,
                        "y": 2
                      },
                      "text": "Mock Entity 2",
                      "isWeak": true,
                      "attributes": [
                        {
                          "id": "2",
                          "relativePos": {
                            "x": 1,
                            "y": 2
                          },
                          "text": "Mock Attribute 2",
                          "isPrimaryKey": false,
                          "isOptional": false,
                          "isMultiValued": false
                        }
                      ]
                    },
                    {
                      "id": "3",
                      "pos": {
                        "x": 1,
                        "y": 2
                      },
                      "text": "Mock Entity 3"
                    },
                    {
                      "id": "4",
                      "pos": {
                        "x": 1,
                        "y": 2
                      },
                      "text": "Mock Entity 4"
                    }
                  ]
                },
                "relationships": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Relationship"
                  },
                  "example": [
                    {
                      "id": "1",
                      "pos": {
                        "x": 1,
                        "y": 2
                      },
                      "text": "Mock Relationship",
                      "attributes": [
                        {
                          "id": "3",
                          "relativePos": {
                            "x": 1,
                            "y": 2
                          },
                          "text": "Mock Attribute Relationship",
                          "isPrimaryKey": false,
                          "isOptional": false,
                          "isMultiValued": false
                        }
                      ],
                      "lHConstraints": {
                        "1": "ONE_TO_MANY",
                        "2": "ONE_TO_MANY"
                      }
                    }
                  ]
                },
                "generalisations": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Generalisation"
                  },
                  "example": [
                    {
                      "id": "1",
                      "text": "messages",
                      "pos": {
                        "x": 1,
                        "y": 2
                      },
                      "parent": "1",
                      "entities": [
                        "3",
                        "4"
                      ]
                    }
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Failed operation",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/schema/all/{graphID}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "graphID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The graph ID"
          }
        ],
        "tags": [
          "General"
        ],
        "description": "Retrieves **FULL** schema",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "entities": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Entity"
                  }
                },
                "relationships": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Relationship"
                  }
                },
                "generalisations": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Generalisation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed operation",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/schema/entities/{graphID}": {
      "get": {
        "tags": [
          "Entities"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "graphID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The graph ID"
          }
        ],
        "description": "Returns **ALL** entities",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Entity"
              }
            }
          },
          "400": {
            "description": "Failed operation",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/schema/relationship/{graphID}": {
      "get": {
        "tags": [
          "Relationships"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "graphID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The graph ID"
          }
        ],
        "description": "Returns **ALL** relationships",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Relationship"
              }
            }
          },
          "400": {
            "description": "Failed operation",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/schema/generalisation/{graphID}": {
      "get": {
        "tags": [
          "Generalisations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "graphID",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The graph ID"
          }
        ],
        "description": "Returns **ALL** generalisations",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Generalisation"
              }
            }
          },
          "400": {
            "description": "Failed operation",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/translation/translate": {
      "post": {
        "tags": [
          "Translation"
        ],
        "description": "Returns translation of diagram to relational model",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "entities": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Entity"
                  },
                  "example": [
                    {
                      "identifier": 1,
                      "positionX": 1,
                      "positionY": 2,
                      "shapeWidth": 4,
                      "shapeHeight": 4,
                      "name": "Mock Entity 1",
                      "isWeak": true,
                      "attributes": [
                        {
                          "identifier": 1,
                          "positionX": 2,
                          "positionY": 4,
                          "shapeWidth": 4,
                          "shapeHeight": 4,
                          "name": "Mock Attribute 1",
                          "isPrimaryKey": true,
                          "isOptional": false
                        }
                      ]
                    },
                    {
                      "identifier": 2,
                      "positionX": 1,
                      "positionY": 2,
                      "shapeWidth": 4,
                      "shapeHeight": 4,
                      "name": "Mock Entity 2",
                      "isWeak": true,
                      "attributes": [
                        {
                          "identifier": 2,
                          "positionX": 2,
                          "positionY": 4,
                          "shapeWidth": 4,
                          "shapeHeight": 4,
                          "name": "Mock Attribute 2",
                          "isPrimaryKey": true,
                          "isOptional": false
                        }
                      ]
                    }
                  ]
                },
                "relationships": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Relationship"
                  },
                  "example": [
                    {
                      "identifier": 1,
                      "positionX": 1,
                      "positionY": 2,
                      "shapeWidth": 4,
                      "shapeHeight": 4,
                      "name": "Mock Relationship",
                      "attributes": [
                        {
                          "identifier": 3,
                          "positionX": 2,
                          "positionY": 4,
                          "shapeWidth": 4,
                          "shapeHeight": 4,
                          "name": "Mock Attribute Relationship",
                          "isPrimaryKey": true,
                          "isOptional": false
                        }
                      ],
                      "lHConstraints": {
                        "1": "ONE_TO_MANY",
                        "2": "ONE_TO_MANY"
                      }
                    }
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TranslatedTable"
              }
            }
          }
        }
      }
    }
  }
}